@model FollowMyTv.DomainLayer.Proposal
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>
    Create</h2>
<script src="@Url.Content( "~/Scripts/jquery.validate.min.js" )" type="text/javascript"></script>
<script src="@Url.Content( "~/Scripts/jquery.validate.unobtrusive.min.js" )" type="text/javascript"></script>
@using ( Html.BeginForm("Create", "Proposals") )
{
    @Html.ValidationSummary( true )
    <fieldset>
        <legend>Proposal</legend>
        @Html.HiddenFor( model => model.Id )
        @Html.HiddenFor( model => model.Status )
        <div class="editor-label">
            @Html.LabelFor( model => model.Show.Name )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Show.Name )
            @Html.ValidationMessageFor( model => model.Show.Name )
        </div>
        <div class="editor-label">
            @Html.LabelFor( model => model.Show.Description )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Show.Description )
            @Html.ValidationMessageFor( model => model.Show.Description )
        </div>
        @if ( Model.Show != null )
        {
            for ( int i = 0 ; i < Model.Show.Seasons.Count ; ++i )
            {
            <fieldset>
                <legend>Season</legend>
                <div class="editor-label">
                    @Html.LabelFor( model => model.Show.Seasons[i].Number )
                </div>
                <div class="editor-field">
                    @Html.EditorFor( model => model.Show.Seasons[i].Number )
                    @Html.ValidationMessageFor( model => model.Show.Seasons[i].Number )
                </div>
                <div class="editor-label">
                    @Html.LabelFor( model => model.Show.Seasons[i].Name )
                </div>
                <div class="editor-field">
                    @Html.EditorFor( model => model.Show.Seasons[i].Name )
                    @Html.ValidationMessageFor( model => model.Show.Seasons[i].Name )
                </div>
                <div class="editor-label">
                    @Html.LabelFor( model => model.Show.Seasons[i].Debut )
                </div>
                <div class="editor-field">
                    @Html.EditorFor( model => model.Show.Seasons[i].Debut )
                    @Html.ValidationMessageFor( model => model.Show.Seasons[i].Debut )
                </div>
                <div class="editor-label">
                    @Html.LabelFor( model => model.Show.Seasons[i].Finale )
                </div>
                <div class="editor-field">
                    @Html.EditorFor( model => model.Show.Seasons[i].Finale )
                    @Html.ValidationMessageFor( model => model.Show.Seasons[i].Finale )
                </div>
                @for ( int j = 0 ; j < Model.Show.Seasons[i].Episodes.Count ; ++j )
                {
                    <fieldset>
                        <legend>Episode</legend>
                        <div class="editor-label">
                            @Html.LabelFor( model => model.Show.Seasons[i].Episodes[j].Number )
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor( model => model.Show.Seasons[i].Episodes[j].Number )
                            @Html.ValidationMessageFor( model => model.Show.Seasons[i].Episodes[j].Number )
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor( model => model.Show.Seasons[i].Episodes[j].Title )
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor( model => model.Show.Seasons[i].Episodes[j].Title )
                            @Html.ValidationMessageFor( model => model.Show.Seasons[i].Episodes[j].Title )
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor( model => model.Show.Seasons[i].Episodes[j].Duration )
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor( model => model.Show.Seasons[i].Episodes[j].Duration )
                            @Html.ValidationMessageFor( model => model.Show.Seasons[i].Episodes[j].Duration )
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor( model => model.Show.Seasons[i].Episodes[j].Synopsis )
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor( model => model.Show.Seasons[i].Episodes[j].Synopsis )
                            @Html.ValidationMessageFor( model => model.Show.Seasons[i].Episodes[j].Synopsis )
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor( model => model.Show.Seasons[i].Episodes[j].Score )
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor( model => model.Show.Seasons[i].Episodes[j].Score )
                            @Html.ValidationMessageFor( model => model.Show.Seasons[i].Episodes[j].Score )
                        </div>
                    </fieldset>
                }
            </fieldset>
            }
        }
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink( "Back to List", "Index" )
</div>